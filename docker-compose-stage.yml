services:
    db:
        image: postgres:15
        container_name: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=vMi8KYTHs09IBM97WYlfrFnO
            - POSTGRES_DB=db_postgres
        ports:
            - "5432:5432"

    redis:
        container_name: redis
        image: redis:7.4
        ports:
            - "6379:6379"
        command: redis-server --save 60 1 --loglevel warning

    backend:
        build: .
        container_name: backend
        command: sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            gunicorn core.wsgi --bind 0.0.0.0:8000 &&
            celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
        volumes:
            - ./core:/app
            - static_volume:/app/static
            - media_volume:/app/media
        expose:
            - "8000"
        environment:
            # basic settings
            - SECRET_KEY=django-insecure-02*y+-u17cm&v(y+2@2jg%)(xld0p#szq#wnc2mnph(m#xoj&7
            - DEBUG=False
            # password reset timeout for api v1
            - PASSWORD_RESET_TIMEOUT=3600
            # email confirguration
            - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
            - EMAIL_HOST=smtp.gmail.com
            - EMAIL_PORT=587
            - EMAIL_USE_TLS=True
            - EMAIL_HOST_USER=animeartificialintelligence03@gmail.com
            - EMAIL_HOST_PASSWORD=xywuynudbaxvqelh
            #  database configuration
            - DB_ENGINE=django.db.backends.postgresql
            - DB_NAME=db_postgres
            - DB_USER=root
            - DB_PASSWORD=vMi8KYTHs09IBM97WYlfrFnO
            - DB_HOST=db
            - DB_PORT=5432
        depends_on:
            - redis
            - db
        restart: always

    worker:
        build: .
        command: celery -A core worker --loglevel=info
        depends_on:
            - backend
            - redis
            - db
        restart: always

    nginx:
        image: nginx:mainline
        container_name: nginx
        ports:
            - "80:80"
        volumes:
            - ./default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/home/app/static
            - media_volume:/home/app/media
        depends_on:
            - redis
            - backend
        restart: always

volumes:
    static_volume:
    media_volume:
    postgres_data:
